{"remainingRequest":"D:\\02-WorkSpace\\02-Java\\sanguimall\\RuoYi-Vue-master\\ruoyi-ui\\node_modules\\babel-loader\\lib\\index.js!D:\\02-WorkSpace\\02-Java\\sanguimall\\RuoYi-Vue-master\\ruoyi-ui\\node_modules\\quill\\blots\\cursor.js","dependencies":[{"path":"D:\\02-WorkSpace\\02-Java\\sanguimall\\RuoYi-Vue-master\\ruoyi-ui\\node_modules\\quill\\blots\\cursor.js","mtime":1759557070517},{"path":"D:\\02-WorkSpace\\02-Java\\sanguimall\\RuoYi-Vue-master\\ruoyi-ui\\babel.config.js","mtime":1757035093000},{"path":"D:\\02-WorkSpace\\02-Java\\sanguimall\\RuoYi-Vue-master\\ruoyi-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1759557068287},{"path":"D:\\02-WorkSpace\\02-Java\\sanguimall\\RuoYi-Vue-master\\ruoyi-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":1759557070186}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["_parchment","require","_text","_interopRequireDefault","Cursor","_EmbedBlot","scroll","domNode","selection","_this","_classCallCheck2","default","_callSuper2","textNode","document","createTextNode","CONTENTS","appendChild","savedLength","_inherits2","_createClass2","key","value","detach","parent","removeChild","format","name","_superPropGet2","target","index","statics","scope","Scope","BLOCK_BLOT","offset","length","optimize","formatAt","node","position","data","remove","restore","composing","range","getNativeRange","lastChild","parentNode","insertBefore","prevTextBlot","prev","TextBlot","prevTextLength","nextTextBlot","next","nextText","text","newText","split","join","mergedTextBlot","insertAt","newTextNode","create","remapOffset","start","end","startNode","startOffset","endNode","endOffset","update","mutations","context","_this2","some","mutation","type","tagName","isolate","unwrap","undefined","EmbedBlot","_defineProperty2","_default","exports"],"sources":["../../src/blots/cursor.ts"],"sourcesContent":["import { EmbedBlot, Scope } from 'parchment';\nimport type { Parent, ScrollBlot } from 'parchment';\nimport type Selection from '../core/selection.js';\nimport TextBlot from './text.js';\nimport type { EmbedContextRange } from './embed.js';\n\nclass Cursor extends EmbedBlot {\n  static blotName = 'cursor';\n  static className = 'ql-cursor';\n  static tagName = 'span';\n  static CONTENTS = '\\uFEFF'; // Zero width no break space\n\n  static value() {\n    return undefined;\n  }\n\n  selection: Selection;\n  textNode: Text;\n  savedLength: number;\n\n  constructor(scroll: ScrollBlot, domNode: HTMLElement, selection: Selection) {\n    super(scroll, domNode);\n    this.selection = selection;\n    this.textNode = document.createTextNode(Cursor.CONTENTS);\n    this.domNode.appendChild(this.textNode);\n    this.savedLength = 0;\n  }\n\n  detach() {\n    // super.detach() will also clear domNode.__blot\n    if (this.parent != null) this.parent.removeChild(this);\n  }\n\n  format(name: string, value: unknown) {\n    if (this.savedLength !== 0) {\n      super.format(name, value);\n      return;\n    }\n    // TODO: Fix this next time the file is edited.\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    let target: Parent | this = this;\n    let index = 0;\n    while (target != null && target.statics.scope !== Scope.BLOCK_BLOT) {\n      index += target.offset(target.parent);\n      target = target.parent;\n    }\n    if (target != null) {\n      this.savedLength = Cursor.CONTENTS.length;\n      // @ts-expect-error TODO: allow empty context in Parchment\n      target.optimize();\n      target.formatAt(index, Cursor.CONTENTS.length, name, value);\n      this.savedLength = 0;\n    }\n  }\n\n  index(node: Node, offset: number) {\n    if (node === this.textNode) return 0;\n    return super.index(node, offset);\n  }\n\n  length() {\n    return this.savedLength;\n  }\n\n  position(): [Text, number] {\n    return [this.textNode, this.textNode.data.length];\n  }\n\n  remove() {\n    super.remove();\n    // @ts-expect-error Fix me later\n    this.parent = null;\n  }\n\n  restore(): EmbedContextRange | null {\n    if (this.selection.composing || this.parent == null) return null;\n    const range = this.selection.getNativeRange();\n    // Browser may push down styles/nodes inside the cursor blot.\n    // https://dvcs.w3.org/hg/editing/raw-file/tip/editing.html#push-down-values\n    while (\n      this.domNode.lastChild != null &&\n      this.domNode.lastChild !== this.textNode\n    ) {\n      // @ts-expect-error Fix me later\n      this.domNode.parentNode.insertBefore(\n        this.domNode.lastChild,\n        this.domNode,\n      );\n    }\n\n    const prevTextBlot = this.prev instanceof TextBlot ? this.prev : null;\n    const prevTextLength = prevTextBlot ? prevTextBlot.length() : 0;\n    const nextTextBlot = this.next instanceof TextBlot ? this.next : null;\n    // @ts-expect-error TODO: make TextBlot.text public\n    const nextText = nextTextBlot ? nextTextBlot.text : '';\n    const { textNode } = this;\n    // take text from inside this blot and reset it\n    const newText = textNode.data.split(Cursor.CONTENTS).join('');\n    textNode.data = Cursor.CONTENTS;\n\n    // proactively merge TextBlots around cursor so that optimization\n    // doesn't lose the cursor.  the reason we are here in cursor.restore\n    // could be that the user clicked in prevTextBlot or nextTextBlot, or\n    // the user typed something.\n    let mergedTextBlot;\n    if (prevTextBlot) {\n      mergedTextBlot = prevTextBlot;\n      if (newText || nextTextBlot) {\n        prevTextBlot.insertAt(prevTextBlot.length(), newText + nextText);\n        if (nextTextBlot) {\n          nextTextBlot.remove();\n        }\n      }\n    } else if (nextTextBlot) {\n      mergedTextBlot = nextTextBlot;\n      nextTextBlot.insertAt(0, newText);\n    } else {\n      const newTextNode = document.createTextNode(newText);\n      mergedTextBlot = this.scroll.create(newTextNode);\n      this.parent.insertBefore(mergedTextBlot, this);\n    }\n\n    this.remove();\n    if (range) {\n      // calculate selection to restore\n      const remapOffset = (node: Node, offset: number) => {\n        if (prevTextBlot && node === prevTextBlot.domNode) {\n          return offset;\n        }\n        if (node === textNode) {\n          return prevTextLength + offset - 1;\n        }\n        if (nextTextBlot && node === nextTextBlot.domNode) {\n          return prevTextLength + newText.length + offset;\n        }\n        return null;\n      };\n\n      const start = remapOffset(range.start.node, range.start.offset);\n      const end = remapOffset(range.end.node, range.end.offset);\n      if (start !== null && end !== null) {\n        return {\n          startNode: mergedTextBlot.domNode,\n          startOffset: start,\n          endNode: mergedTextBlot.domNode,\n          endOffset: end,\n        };\n      }\n    }\n    return null;\n  }\n\n  update(mutations: MutationRecord[], context: Record<string, unknown>) {\n    if (\n      mutations.some((mutation) => {\n        return (\n          mutation.type === 'characterData' && mutation.target === this.textNode\n        );\n      })\n    ) {\n      const range = this.restore();\n      if (range) context.range = range;\n    }\n  }\n\n  // Avoid .ql-cursor being a descendant of `<a/>`.\n  // The reason is Safari pushes down `<a/>` on text insertion.\n  // That will cause DOM nodes not sync with the model.\n  //\n  // For example ({I} is the caret), given the markup:\n  //    <a><span class=\"ql-cursor\">\\uFEFF{I}</span></a>\n  // When typing a char \"x\", `<a/>` will be pushed down inside the `<span>` first:\n  //    <span class=\"ql-cursor\"><a>\\uFEFF{I}</a></span>\n  // And then \"x\" will be inserted after `<a/>`:\n  //    <span class=\"ql-cursor\"><a>\\uFEFF</a>d{I}</span>\n  optimize(context?: unknown) {\n    // @ts-expect-error Fix me later\n    super.optimize(context);\n\n    let { parent } = this;\n    while (parent) {\n      if (parent.domNode.tagName === 'A') {\n        this.savedLength = Cursor.CONTENTS.length;\n        // @ts-expect-error TODO: make isolate generic\n        parent.isolate(this.offset(parent), this.length()).unwrap();\n        this.savedLength = 0;\n        break;\n      }\n      parent = parent.parent;\n    }\n  }\n\n  value() {\n    return '';\n  }\n}\n\nexport default Cursor;\n"],"mappings":"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","ignoreList":[]}]}